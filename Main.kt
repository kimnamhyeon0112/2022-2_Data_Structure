fun main() {
    val graph = AdjacencyList<String>()
    val N1 = graph.createVertex("1")
    val N2 = graph.createVertex("2")
    val N3 = graph.createVertex("3")
    val N4 = graph.createVertex("4")
    val N5 = graph.createVertex("5")
    val N6 = graph.createVertex("6")
    graph.add(EdgeType.UNDIRECTED, N1, N2, 6.0); graph.add(EdgeType.UNDIRECTED, N1, N4, 5.0)
    graph.add(EdgeType.UNDIRECTED, N1, N3, 1.0); graph.add(EdgeType.UNDIRECTED, N2, N3, 5.0)
    graph.add(EdgeType.UNDIRECTED, N2, N5, 3.0); graph.add(EdgeType.UNDIRECTED, N5, N3, 6.0)
    graph.add(EdgeType.UNDIRECTED, N5, N6, 6.0); graph.add(EdgeType.UNDIRECTED, N6, N3, 4.0)
    graph.add(EdgeType.UNDIRECTED, N6, N4, 2.0); graph.add(EdgeType.UNDIRECTED, N4, N3, 5.0)
    val (cost, mst) = Prim.produceMinimumSpanningTree(graph)
    println("cost: $cost")
    println("mst: ")
    println(mst)
}